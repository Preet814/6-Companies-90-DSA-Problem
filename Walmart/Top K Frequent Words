Problem : Given an array of strings words and an integer k, return the k most frequent strings.
          Return the answer sorted by the frequency from highest to lowest. Sort the words with the same frequency by their 
          lexicographical order.
          
          Example 1:
          Input: words = ["i","love","leetcode","i","love","coding"], k = 2
          Output: ["i","love"]
          Explanation: "i" and "love" are the two most frequent words.
          Note that "i" comes before "love" due to a lower alphabetical order.

Solution :

class Solution {
public:
    static bool cmp(pair<int, string>& a, pair<int, string>& b){
        if(a.first==b.first)
            return a.second<b.second;
        else
            return a.first>b.first;
    }
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string,int> mp;
        vector<string> ans;
        for(auto it:words){
            mp[it]++;
        }
        vector<pair<int,string>> vec;
        for(auto it:mp){
            vec.push_back({it.second,it.first});
        }
        sort(vec.begin(),vec.end(),cmp);
        for(int i=0;i<k;i++){
            ans.push_back(vec[i].second);
        }
        return ans;
    }
};
